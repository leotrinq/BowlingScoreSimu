@model Game
@using System.Text.Json
@{
    ViewData["Title"] = "Game Page";
}
<div class="container fluid py-4">

    <!-- Scoreboard -->
    @for (int i = -1; i < Model.Players.Count; i++)
    {        
        <div class="row mb-5">  
            <!-- Rounds Columns -->
            @if (i == -1){
                <div class="col d-flex align-items-center first-round-cell">
                </div>
                @for (int j = 0; j < Model.NumberOfRounds - 1 ; j++)
                {
                    if (j == Model.CurrentRound) // Color Current Round
                    {
                        <div class="col border-custom border-custom round-cells current-round">
                            <label class="d-block mx-auto text-center">@(j + 1)</label>
                        </div>
                    }
                    else
                    {
                        <div class="col border-custom border-custom round-cells">
                            <label class="d-block mx-auto text-center">@(j + 1)</label>
                        </div>
                    }
                }
                <!-- Bonus Round -->
                if (Model.CurrentRound == Model.NumberOfRounds - 1) // Color Bonus Round
                {
                    <div class="col border-custom border-custom round-cells current-round">
                        <label class="d-block mx-auto text-center">Bonus</label>
                    </div>
                }
                else
                {
                    <div class="col border-custom border-custom round-cells">
                        <label class="d-block mx-auto text-center">Bonus</label>
                    </div>
                }
            }
            else{                
                <!-- Name Rows -->
                @if (i == Model.actualplayer) // Color Current Player
                { 
                    <div class="col border-custom border-custom d-flex align-items-center current-player">
                        <span class="d-block mx-auto text-center">@Model.Players[i].Name</span>
                    </div>
                }else{
                    <div class="col border-custom border-custom d-flex align-items-center">
                        <span class="d-block mx-auto text-center">@Model.Players[i].Name</span>
                    </div>
                }
                <!-- Scores Columns and Rows -->
                @for (int j = 0; j < Model.NumberOfRounds-1; j++)
                {
                    
                    <div class="col border-custom border-custom">
                        <div class="d-flex justify-content-between">
                            <label class="d-inline ms-2">@Model.Players[i].Rounds[j].FirstRound</label>
                            <label class="d-inline me-2">@Model.Players[i].Rounds[j].SecondRound</label>
                        </div>
                        <label class="d-block mx-auto text-center">@Model.Players[i].Rounds[j].RoundScore</label>
                    </div>
                }
                <!-- Bonus scores -->
                <div class="col border-custom bonus-cell">
                    <div class="d-flex justify-content-between">
                        <label class="d-inline ms-2">@Model.Players[i].Rounds[Model.NumberOfRounds -1].FirstRound</label>
                        <label class="d-inline me-2">@Model.Players[i].Rounds[Model.NumberOfRounds -1].SecondRound</label>
                    </div>
                    <label class="d-block mx-auto text-center">@Model.Players[i].Rounds[Model.NumberOfRounds - 1].RoundScore</label>
                </div>
            }
        </div>        
    }

    <form method="post" asp-action="PinsTaken">
        <input type="hidden" name="serializedGame" value="@JsonSerializer.Serialize(Model)" />

        <!-- Show the current player and its number of roll -->
        @{string rollNumber = Model.isRoll1 ? "first" : "second";} 
        <h4 class="mb-3 text-center" style="color:#fc5d5d">@Model.Players[Model.actualplayer].Name's turn!! - @rollNumber roll</h4>

        <!-- Choose the number of pins  -->
        <div class="col-12 mb-3 d-flex justify-content-center">
            <div class="card player-card-pins">
                <div class="card-body align-items-center text-center">
                    <h4 class="mb-3">How many pins fell?</h4>
                    @{
                        int pins;
                        // If we are on bonus round - roll 2
                        if (Model.Players[Model.actualplayer].Rounds[^1].FirstRound == "X")
                        {
                            pins = Model.NumberOfPins;
                        }
                        else
                        {
                            pins = Model.isRoll1 ? Model.NumberOfPins : Model.NumberOfPins - Model.Players[Model.actualplayer].Score_1;

                        }
                    }
                    @for (int i = 0; i <= pins; i++)
                    {
                        <button type="button" id="button@(i)" class="bouton btn btn-secondary" onclick="ColorButtons(this,@i)">@i</button>
                    }
                    <input id="pinsScore" name="pinsScore" class="mt-3 form-control text-center" style="color:#fc5d5d; font-size: large;background-color:transparent;border:hidden;" value="0" readonly />
                </div>
            </div>
        </div>

        <!-- Confirm Button  -->
        <div class="row" style="font-size:xx-large">
            <div class="col text-center">
                <button type="submit" class="btn btn-purple btn-lg"><strong>Confirm</strong></button>
            </div>
        </div>  
    </form>
</div>

 @section Scripts {

    <!-- script to change buttons color -->
    <script>
        function ColorButtons(clickedButton, indButton) {
            @{
                int pins;
                if (Model.Players[Model.actualplayer].Rounds[^1].FirstRound == "X")
                {
                    pins = Model.NumberOfPins;
                }
                else
                {
                    pins = Model.isRoll1 ? Model.NumberOfPins : Model.NumberOfPins - Model.Players[Model.actualplayer].Score_1;
                }
            }

            // Pins remaining
            var pins = @pins;
            for (var i = 1; i <= pins; i++) {
                var pinButton = document.getElementById('button' + i);

                // Buttons on the left of the selected one are colored in red (except 0)
                if (i <= indButton) {
                    pinButton.style.backgroundColor = '#fc5d5d';
                    pinButton.style.borderColor = '#fc5d5d';
                }
                // Buttons on the left of the selected one are colored in grey
                else {
                    pinButton.style.backgroundColor = '#585858';
                    pinButton.style.borderColor = '#585858';
                }
            }

            // Update printed score
            var pinsScore = document.getElementById('pinsScore');
            pinsScore.value = indButton;
        };
    </script>

}